CREATE TABLE Employee(
	Id_Employee INT IDENTITY(1, 1) NOT NULL,
	Name NVARCHAR(255) NOT NULL,
	BeginTime TIME(0) NULL,
	EndTime TIME(0) NULL
)
GO

ALTER TABLE Employee ADD CONSTRAINT PK_Employee PRIMARY KEY CLUSTERED 
(
	Id_Employee ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON Employee
(
	Name ASC
)
INCLUDE
(
	BeginTime,
	EndTime
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE TABLE Department(
	Id_Department INT IDENTITY(1, 1) NOT NULL,
	Name NVARCHAR(255) NOT NULL,
	EMail NVARCHAR(255) NULL,
	BeginTime TIME(0) NOT NULL,
	EndTime TIME(0) NOT NULL
)
GO

ALTER TABLE Department ADD CONSTRAINT PK_Department PRIMARY KEY CLUSTERED 
(
	Id_Department ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON Department
(
	Name ASC
)
INCLUDE
(
	EMail,
	BeginTime,
	EndTime
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

SET IDENTITY_INSERT Department ON
GO

INSERT INTO Department
(
	Id_Department,
	Name,
	EMail,
	BeginTime,
	EndTime
)
  SELECT
    d.ID_DEPARTMENT,
    d.NAME,
    d.EMAIL,
    d.BeginTime,
    d.EndTime
  FROM
    DEPARTMENTS d
  ORDER BY
    d.ID_DEPARTMENT
GO

SET IDENTITY_INSERT Department OFF
GO

DROP TABLE DEPARTMENTS
GO

DROP TABLE NumberTimeWork
GO

CREATE TABLE [User]
(
	Id_User  INT IDENTITY(1, 1) NOT NULL,
	Name     NVARCHAR(128) NOT NULL,
	CanLogin BIT NOT NULL,
	CanUser  BIT NOT NULL,
	CanWrite BIT NOT NULL,
	CanAdmin BIT NOT NULL
) ON [PRIMARY]
GO

ALTER TABLE [User] ADD CONSTRAINT PK_User PRIMARY KEY CLUSTERED 
(
	Id_User ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON [User]
(
	Name ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

SET IDENTITY_INSERT [User] ON
GO

INSERT INTO [User]
(
	Id_User,
	Name,
	CanLogin,
	CanUser,
	CanWrite,
	CanAdmin
)
  SELECT
    u.ID,
    u.Name,
    ISNULL(u.CanLogin, 0),
    ISNULL(u.CanWrite, 0),
    ISNULL(u.CanWrite, 0),
    ISNULL(u.CanAdmin, 0)
  FROM
    USERS u
  ORDER BY
    u.ID

SET IDENTITY_INSERT [User] OFF
GO

DROP TABLE USERS
GO

CREATE TABLE TableSheet(
	Id_TableSheet INT IDENTITY(1, 1) NOT NULL,
	Id_Employee   INT NOT NULL,
	[Date]        DATE NOT NULL,
	[Type]        NVARCHAR(5) NOT NULL
)
GO

ALTER TABLE TableSheet ADD CONSTRAINT PK_TableSheet PRIMARY KEY CLUSTERED 
(
	Id_TableSheet ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON TableSheet
(
	Id_Employee ASC,
	[Date] ASC
)
INCLUDE
(
	[Type]
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE TableSheet WITH CHECK ADD CONSTRAINT FK_TableSheet_Employee FOREIGN KEY(Id_Employee)
REFERENCES Employee (Id_Employee)
GO

ALTER TABLE TableSheet CHECK CONSTRAINT FK_TableSheet_Employee
GO

CREATE TABLE Period(
	Id_Period INT IDENTITY(1, 1) NOT NULL,
	BeginDate DATE NOT NULL,
	EndDate   DATE NOT NULL,
	[Month]   SMALLINT NOT NULL,
	[Year]    SMALLINT NOT NULL
)
GO

ALTER TABLE Period ADD CONSTRAINT PK_Period PRIMARY KEY CLUSTERED 
(
	Id_Period ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

SET IDENTITY_INSERT Period ON
GO

INSERT INTO Period
(
	Id_Period,
	BeginDate,
	EndDate,
	[Month],
	[Year]
)
  SELECT
    p.ID,
    p.DATE1,
    p.DATE2,
    p.MONTH_INT,
    p.YEAR_INT
  FROM
    PERIODS p
  ORDER BY
    p.ID
GO

SET IDENTITY_INSERT Period OFF
GO

DROP TABLE PERIODS
GO

CREATE TABLE ImportTableSheet(
	Id_ImportTableSheet  INT IDENTITY(1, 1) NOT NULL,
	EmployeeExternalCode NVARCHAR(255) NOT NULL,
	[Type]               NVARCHAR(255) NOT NULL,
	[Date]               DATE NOT NULL,
	IsImport             BIT NOT NULL,
	DateImport           DATETIMEOFFSET(7) NULL,
	[Status]             NVARCHAR(MAX) NULL,
	Id_ExternalSystem    INT NOT NULL
 )
GO

ALTER TABLE ImportTableSheet ADD CONSTRAINT PK_ImportTableSheet PRIMARY KEY CLUSTERED 
(
	Id_ImportTableSheet ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE TABLE ImportEmployee(
	Id_ImportEmployee      INT IDENTITY(1, 1) NOT NULL,
	EmployeeExternalCode   NVARCHAR(255) NOT NULL,
	FIO                    NVARCHAR(255) NOT NULL,
	DepartmentExternalCode NVARCHAR(255) NULL,
	NameDepartment         NVARCHAR(255) NULL,
	IsImport               BIT NOT NULL,
	DateImport             DATETIMEOFFSET(7) NULL,
	[Status]               NVARCHAR(MAX) NULL,
	Id_ExternalSystem      INT NOT NULL
)
GO

ALTER TABLE ImportEmployee ADD CONSTRAINT PK_ImportEmployee PRIMARY KEY CLUSTERED 
(
	Id_ImportEmployee ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE TABLE ExternalSystem(
	Id_ExternalSystem INT NOT NULL,
	Name              NVARCHAR(255) NOT NULL
)
GO

ALTER TABLE ExternalSystem ADD CONSTRAINT PK_ExternalSystem PRIMARY KEY CLUSTERED 
(
	Id_ExternalSystem ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE NONCLUSTERED INDEX UIX_1 ON ExternalSystem
(
	Name ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

INSERT INTO ExternalSystem
  (Id_ExternalSystem, Name)
VALUES
  (1, N'1C')
GO

CREATE TABLE ExternalEmployee(
	Id_ExternalEmployee  INT IDENTITY(1, 1) NOT NULL,
	Id_Employee          INT NOT NULL,
	EmployeeExternalCode NVARCHAR(255) NOT NULL,
	Id_ExternalSystem    INT NOT NULL
)
GO

ALTER TABLE ExternalEmployee ADD CONSTRAINT PK_ExternalEmployee PRIMARY KEY CLUSTERED 
(
	Id_ExternalEmployee ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON ExternalEmployee
(
	Id_Employee ASC,
	Id_ExternalSystem ASC
)
INCLUDE
(
	EmployeeExternalCode
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE ExternalEmployee WITH CHECK ADD CONSTRAINT FK_ExternalEmployee_ExternalSystem FOREIGN KEY(Id_ExternalSystem)
REFERENCES ExternalSystem (Id_ExternalSystem)
GO

ALTER TABLE ExternalEmployee CHECK CONSTRAINT FK_ExternalEmployee_ExternalSystem
GO

ALTER TABLE ExternalEmployee WITH CHECK ADD CONSTRAINT FK_ExternalEmployee_Employee FOREIGN KEY(Id_Employee)
REFERENCES Employee (Id_Employee)
GO

ALTER TABLE ExternalEmployee CHECK CONSTRAINT FK_ExternalEmployee_Employee
GO

CREATE TABLE ExternalDepartment(
	Id_ExternalDepartment  INT IDENTITY(1, 1) NOT NULL,
	Id_Department          INT NOT NULL,
	DepartmentExternalCode NVARCHAR(255) NOT NULL,
	Id_ExternalSystem      INT NOT NULL
)
GO

ALTER TABLE ExternalDepartment ADD CONSTRAINT PK_ExternalDepartment PRIMARY KEY CLUSTERED 
(
	Id_ExternalDepartment ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON ExternalDepartment
(
	Id_Department ASC,
	Id_ExternalSystem ASC
)
INCLUDE
(
	DepartmentExternalCode
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE ExternalDepartment WITH CHECK ADD CONSTRAINT FK_ExternalDepartment_ExternalSystem FOREIGN KEY(Id_ExternalSystem)
REFERENCES ExternalSystem (Id_ExternalSystem)
GO

ALTER TABLE ExternalDepartment CHECK CONSTRAINT FK_ExternalDepartment_ExternalSystem
GO

ALTER TABLE ExternalDepartment WITH CHECK ADD CONSTRAINT FK_ExternalDepartment_Department FOREIGN KEY(Id_Department)
REFERENCES Department (Id_Department)
GO

ALTER TABLE [ExternalDepartment] CHECK CONSTRAINT FK_ExternalDepartment_Department
GO

CREATE TABLE CrossUserDepartment(
	Id_CrossUserDepartment INT IDENTITY(1, 1) NOT NULL,
	Id_User INT NOT NULL,
	Id_Department INT NOT NULL,
)
GO

ALTER TABLE CrossUserDepartment ADD CONSTRAINT PK_CrossUserDepartment PRIMARY KEY CLUSTERED 
(
	Id_CrossUserDepartment ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON CrossUserDepartment
(
	Id_User ASC,
	Id_Department ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE CrossUserDepartment WITH CHECK ADD CONSTRAINT FK_CrossUserDepartment_Department FOREIGN KEY(Id_Department)
REFERENCES Department (Id_Department)
GO

ALTER TABLE CrossUserDepartment CHECK CONSTRAINT FK_CrossUserDepartment_Department
GO

ALTER TABLE CrossUserDepartment WITH CHECK ADD CONSTRAINT FK_CrossUserDepartment_User FOREIGN KEY(Id_User)
REFERENCES [User] (Id_User)
GO

ALTER TABLE CrossUserDepartment CHECK CONSTRAINT FK_CrossUserDepartment_User
GO

INSERT INTO CrossUserDepartment
(
	Id_User,
	Id_Department
)
  SELECT
    cu.ID_USER,
    cu.ID_DEPARTMENT
  FROM
    CROSS_USERDEPARTMENT cu
  ORDER BY
    cu.ID_USER,
    cu.ID_DEPARTMENT
GO

DROP TABLE CROSS_USERDEPARTMENT
GO

CREATE TABLE CrossEmployeeDepartment(
	Id_CrossEmployeeDepartment INT IDENTITY(1, 1) NOT NULL,
	Id_Employee                INT NOT NULL,
	Id_Department              INT NOT NULL,
	DateActive                 DATE NOT NULL,
)
GO

ALTER TABLE CrossEmployeeDepartment ADD CONSTRAINT PK_CrossEmployeeDepartment PRIMARY KEY CLUSTERED 
(
	Id_CrossEmployeeDepartment ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON CrossEmployeeDepartment
(
	Id_Employee ASC,
	DateActive ASC
)
INCLUDE
(
	Id_Department
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE CrossEmployeeDepartment WITH CHECK ADD CONSTRAINT FK_CrossEmployeeDepartment_Department FOREIGN KEY(Id_Department)
REFERENCES Department (Id_Department)
GO

ALTER TABLE CrossEmployeeDepartment CHECK CONSTRAINT FK_CrossEmployeeDepartment_Department
GO

ALTER TABLE CrossEmployeeDepartment WITH CHECK ADD CONSTRAINT FK_CrossEmployeeDepartment_Employee FOREIGN KEY(Id_Employee)
REFERENCES Employee (Id_Employee)
GO

ALTER TABLE CrossEmployeeDepartment CHECK CONSTRAINT FK_CrossEmployeeDepartment_Employee
GO

CREATE TABLE Cost(
	Id_Cost INT IDENTITY(1, 1) NOT NULL,
	Name    NVARCHAR(128) NOT NULL,
	Vat     TINYINT NULL,
)
GO

ALTER TABLE Cost ADD CONSTRAINT PK_Cost PRIMARY KEY CLUSTERED 
(
	Id_Cost ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON Cost
(
	Name ASC
)
INCLUDE
(
	Vat
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

SET IDENTITY_INSERT Cost ON
GO

INSERT INTO Cost
(
	Id_Cost,
	Name,
	Vat
)
  SELECT
    c.COST_ID,
    c.NAME,
    c.NDS
  FROM
    COSTS c
  ORDER BY
    c.ID
GO

SET IDENTITY_INSERT Cost OFF
GO

DROP TABLE COSTS
GO

DROP TABLE ACTIVITY_PERIOD
GO

CREATE TABLE [Caller](
	Id_Caller INT IDENTITY(1, 1) NOT NULL,
	Number    NCHAR(9) NOT NULL,
	Name      NVARCHAR(255) NOT NULL,
	Abonent   NVARCHAR(255) NOT NULL,
)
GO

ALTER TABLE [Caller] ADD CONSTRAINT PK_Caller PRIMARY KEY CLUSTERED 
(
	Id_Caller ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON [Caller]
(
	Number ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

SET IDENTITY_INSERT [Caller] ON
GO

INSERT INTO [Caller]
(
	Id_Caller,
	Number,
	Name,
	Abonent
)
  SELECT
    c.CALLER_ID,
    CASE
      WHEN ISNUMERIC(LEFT(c.ABN, CHARINDEX(',', c.ABN, 1) - 1)) = 1 THEN LEFT(c.ABN, CHARINDEX(',', c.ABN, 1) - 1)
      WHEN ISNUMERIC(RIGHT(c.ABN, LEN(c.ABN) - CHARINDEX(', ', c.ABN, 1) - 1)) = 1 THEN RIGHT(c.ABN, LEN(c.ABN) - CHARINDEX(', ', c.ABN, 1) - 1)
      ELSE c.NUMBER
    END,
    c.NAME,
    c.ABN
  FROM
    CALLERS c
  ORDER BY
    c.ID

SET IDENTITY_INSERT [Caller] OFF
GO

DROP TABLE CALLERS
GO

CREATE TABLE [Call](
	Id_Call      INT IDENTITY(1, 1) NOT NULL,
	Id_Caller    INT NOT NULL,
	Id_Cost      INT NOT NULL,
	CallDateTime DATETIME2(0) NOT NULL,
	TypeCode     NVARCHAR(50) NOT NULL,
	Duration     INT NOT NULL,
	Number       NVARCHAR(100) NOT NULL,
	Price        MONEY NOT NULL
)
GO

ALTER TABLE [Call] ADD CONSTRAINT PK_Call PRIMARY KEY CLUSTERED 
(
	Id_Call ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE NONCLUSTERED INDEX IX_1 ON [Call]
(
	Id_Caller ASC,
	CallDateTime ASC,
	Id_Cost ASC
)
INCLUDE
(
	Price,
	TypeCode,
	Duration,
	Number
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE NONCLUSTERED INDEX IX_2 ON [Call]
(
	CallDateTime ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE [Call] WITH CHECK ADD CONSTRAINT FK_Call_Caller FOREIGN KEY(Id_Caller)
REFERENCES [Caller] (Id_Caller)
GO

ALTER TABLE [Call] CHECK CONSTRAINT FK_Call_Caller
GO

ALTER TABLE [Call] WITH CHECK ADD CONSTRAINT FK_Call_Cost FOREIGN KEY(Id_Cost)
REFERENCES [Cost] (Id_Cost)
GO

ALTER TABLE [Call] CHECK CONSTRAINT FK_Call_Cost
GO

INSERT INTO [Call]
(
	Id_Caller,
	Id_Cost,
	CallDateTime,
	TypeCode,
	Duration,
	Number,
	Price
)
  SELECT
    c.CALLER_ID,
    c.COST_ID,
    c.DT,
    c.TYPE_CODE,
    c.[LEN],
    c.NUMBER,
    c.PRICE
  FROM
    CALLS c
  ORDER BY
    c.ID
GO

DROP TABLE CALLS
GO

CREATE TABLE CrossCallerEmployee(
	Id_CrossCallerEmployee INT IDENTITY(1, 1) NOT NULL,
	Id_Caller              INT NOT NULL,
	Id_Employee            INT NOT NULL,
	DateActive             DATE NOT NULL,
)
GO

ALTER TABLE CrossCallerEmployee ADD CONSTRAINT PK_CrossCallerEmployee PRIMARY KEY CLUSTERED 
(
	Id_CrossCallerEmployee ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE NONCLUSTERED INDEX IX_1 ON CrossCallerEmployee
(
	Id_Employee ASC,
	DateActive ASC
)
INCLUDE
(
	Id_Caller
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

CREATE UNIQUE NONCLUSTERED INDEX UIX_1 ON CrossCallerEmployee
(
	Id_Caller ASC,
	DateActive ASC
)
INCLUDE
(
	Id_Employee
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
GO

ALTER TABLE CrossCallerEmployee WITH CHECK ADD CONSTRAINT FK_CrossCallerEmployee_Caller FOREIGN KEY(Id_Caller)
REFERENCES [Caller] (Id_Caller)
GO

ALTER TABLE [CrossCallerEmployee] CHECK CONSTRAINT FK_CrossCallerEmployee_Caller
GO

ALTER TABLE CrossCallerEmployee WITH CHECK ADD CONSTRAINT FK_CrossCallerEmployee_Employee FOREIGN KEY(Id_Employee)
REFERENCES Employee (Id_Employee)
GO

ALTER TABLE CrossCallerEmployee CHECK CONSTRAINT FK_CrossCallerEmployee_Employee
GO

;WITH CTE AS (
              SELECT
                a.ID,
                ROW_NUMBER() OVER (PARTITION BY a.NUMBER, a.ABN_NAME, a.ID_DEPARTMENT ORDER BY a.DateActive) rown
              FROM
                ABONENTS a
             )
  DELETE FROM ABONENTS
  WHERE ID IN (SELECT c.ID FROM CTE c WHERE c.rown > 1)
GO

INSERT INTO Employee
(
	Name,
	BeginTime,
	EndTime
)
  SELECT DISTINCT
    a.ABN_NAME,
    NULL,
    NULL
  FROM
    ABONENTS a
  ORDER BY
    a.ABN_NAME
GO

INSERT INTO CrossCallerEmployee
(
	Id_Caller,
	Id_Employee,
	DateActive
)
  SELECT
    c.Id_Caller,
    e.Id_Employee,
    a.DateActive
  FROM
    ABONENTS a
    JOIN [Caller] c
      ON RIGHT(c.Number, 7) = RIGHT(a.NUMBER, 7)
    JOIN Employee e
      ON e.Name = a.ABN_NAME
  ORDER BY
    e.Id_Employee,
    c.Id_Caller,
    a.DateActive
GO

DROP TABLE ABONENTS
GO